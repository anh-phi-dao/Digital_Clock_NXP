/**
  * @file    Cortex_M4.h
  * @author  Dao Anh Phi
  * @brief   
  *          This file manage the register, define 
  *          register address,mask for Cortex_M4 common registers.
  * 			+System Tick Timer
  * 			+Nested Vector Interrupt COntroller
  * 			+System block control
**/

#ifndef CORTEX_M4_H
#define CORTEX_M4_H
#ifdef __cplusplus
extern "C" {
#endif

#include <stdint.h>

/** 
 * @brief use for NVIC_init()
**/
typedef struct 
{
	uint16_t NVIC_ID;
	uint16_t NONE_IPR_NUMBER;
	uint16_t IPR_NUMER;
}NVIC_VECTOR;

/**
 * @brief NVIC register
**/
typedef struct
{
	volatile uint32_t ICTR;
	
	volatile uint32_t Reservex[62];
	
	volatile uint32_t ISER[8];
	
	volatile uint32_t Reserve[24];
	
	volatile uint32_t ICER[8];
	
	volatile uint32_t Reserve2[24];
	
	volatile uint32_t ISPR[8];
	
	volatile uint32_t Reserve3[24];
	
	volatile uint32_t ICPR[8];
	
	volatile uint32_t Reserve4[24];
	
	volatile uint32_t IABR[8];
	
	volatile uint32_t Reserve5[56];
	
	volatile uint32_t IPR[60];
	
	volatile uint32_t Reserve6[643];
	uint8_t Reserve7;

	volatile uint32_t STIR;

}nvic;

/**
 * @brief system control block register
**/
typedef struct 
{
	volatile uint32_t ACTLR;

	volatile uint32_t Reserve[829];

	volatile uint32_t CPUID;
	volatile uint32_t ICSR;
	volatile uint32_t VTOR;
	volatile uint32_t AIRCR;
	volatile uint32_t SCR;
	volatile uint32_t CCR;
	volatile uint32_t SHPR1;
	volatile uint32_t SHPR2;
	volatile uint32_t SHPR3;
	volatile uint32_t SHCRS;
	volatile uint32_t CFSR;
	volatile uint32_t HFSR;

	volatile uint32_t Reserve1;

	volatile uint32_t MMAR;
	volatile uint32_t BFAR;
	volatile uint32_t AFSR;


}System_control_block;

/**
 * @brief System tick timer register
**/
typedef struct
{
	volatile uint32_t CSR;
	volatile uint32_t RVR;
	volatile uint32_t CVR;
	volatile uint32_t CALIB;

}System_tick;

enum SYST_CSR_MASK
{
	ENABLE,
	TICKINT,
	CLKSOURCE,
	COUNTFLAG=16,
};

#define NO_INTERRUPT 0
#define INTERRUPT 1

#define NVIC ((nvic*)0xE000E004UL)

#define SCB ((System_control_block*)0xE000E008UL)

#define SYST ((System_tick*)0xE000E010UL)


/**
 * @brief these are NVIC ID for setting right field in the corresponding register
 * 
**/
#define DMA_CHANNEL_0_NVIC (NVIC_VECTOR){0,0,0}
#define DMA_CHANNEL_1_NVIC (NVIC_VECTOR){1,0,0}
#define DMA_CHANNEL_2_NVIC (NVIC_VECTOR){2,0,0}
#define DMA_CHANNEL_3_NVIC (NVIC_VECTOR){3,0,0}
#define DMA_CHANNEL_4_NVIC (NVIC_VECTOR){4,0,1}
#define DMA_CHANNEL_5_NVIC (NVIC_VECTOR){5,0,1}
#define DMA_CHANNEL_6_NVIC (NVIC_VECTOR){6,0,1}
#define DMA_CHANNEL_7_NVIC (NVIC_VECTOR){7,0,1}
#define DMA_CHANNEL_8_NVIC (NVIC_VECTOR){8,0,2}
#define DMA_CHANNEL_9_NVIC (NVIC_VECTOR){9,0,2}
#define DMA_CHANNEL_10_NVIC (NVIC_VECTOR){10,0,2}
#define DMA_CHANNEL_11_NVIC (NVIC_VECTOR){11,0,2}
#define DMA_CHANNEL_12_NVIC (NVIC_VECTOR){12,0,3}
#define DMA_CHANNEL_13_NVIC (NVIC_VECTOR){13,0,3}
#define DMA_CHANNEL_14_NVIC (NVIC_VECTOR){14,0,3}
#define DMA_CHANNEL_15_NVIC (NVIC_VECTOR){15,0,3}
#define DMA_ERROR_NVIC (NVIC_VECTOR){16,0,4}

#define MCM_NVIC (NVIC_VECTOR){17,0,4}
#define FLASH_COMPLETE_NVIC (NVIC_VECTOR){18,0,4}
#define FLASH_READ_COLLISION_NVIC (NVIC_VECTOR){19,0,4}
#define PMC_NVIC (NVIC_VECTOR){20,0,5}
#define FLASH_DOUBLE_BIT_NVIC (NVIC_VECTOR){21,0,5}
#define WDOG_NVIC (NVIC_VECTOR){22,0,5}
#define EWM_NVIC (NVIC_VECTOR){22,0,5}
#define RCM_NVIC (NVIC_VECTOR){23,0,5}

#define LPI2C0_MASTER_NVIC (NVIC_VECTOR){24,0,6}
#define LPI2C0_SLAVE_NVIC (NVIC_VECTOR){25,0,6}

#define LPSPI0_NVIC (NVIC_VECTOR){26,0,6}
#define LPSPI1_NVIC (NVIC_VECTOR){27,0,6}
#define LPSPI2_NVIC (NVIC_VECTOR){28,0,7}

#define LPI2C1_MASTER_NVIC (NVIC_VECTOR){29,0,7}
#define LPI2C1_SLAVE_NVIC (NVIC_VECTOR){30,0,7}

#define LPUART0_TRANSMIT_RECIEVE_ERROR_OVERRUN_NVIC (NVIC_VECTOR){31,0,7}
#define LPUART1_TRANSMIT_RECIEVE_ERROR_OVERRUN_NVIC (NVIC_VECTOR){33,1,8}
#define LPUART2_TRANSMIT_RECEIVE_ERROR_OVERRUN_NVIC (NVIC_VECTOR){35,1,8}

#define ADC0_NVIC (NVIC_VECTOR){39,1,9}
#define ADC1_NVIC (NVIC_VECTOR){40,1,10}

#define CMP0_NVIC (NVIC_VECTOR){41,1,10}

#define ERM_SINGLE_BIT_ERROR_CORRECTION_NVIC (NVIC_VECTOR){44,1,11}
#define ERM_DOUBLE_BIT_ERROR_NON_CORRECTION_NVIC (NVIC_VECTOR){45,1,11}

#define RTC_ALARM_NVIC (NVIC_VECTOR){46,1,11}
#define RTC_SECONDS_NVIC (NVIC_VECTOR){47,1,11}

#define LPIT_CHANNEL_0_NVIC (NVIC_VECTOR){48,1,12}
#define LPIT_CHANNEL_1_NVIC (NVIC_VECTOR){49,1,12}
#define LPIT_CHANNEL_2_NVIC (NVIC_VECTOR){50,1,12}
#define LPIT_CHANNEL_3_NVIC (NVIC_VECTOR){51,1,12}

#define PDB0_NVIC (NVIC_VECTOR){52,1,13}

#define SAI1_TRANSMIT_NVIC (NVIC_VECTOR){55,1,13}
#define SAI1_RECEIVE_NVIC (NVIC_VECTOR){56,1,14}

#define SCG_NVIC (NVIC_VECTOR){57,1,14}

#define LPTIMER_NIVIC (NVIC_VECTOR){58,1,14}

#define PORTA_NVIC (NVIC_VECTOR){59,1,14}
#define PORTB_NVIC (NVIC_VECTOR){60,1,15}
#define PORTC_NVIC (NVIC_VECTOR){61,1,15}
#define PORTD_NVIC (NVIC_VECTOR){62,1,15}
#define PORTE_NVIC (NVIC_VECTOR){63,1,16}

#define SOFTWARE_NVIC (NVIC_VECTOR){64,2,16}
#define QSPI_NVIC (NVIC_VECTOR){65,2,16}
#define PDB1_NVIC (NVIC_VECTOR){68,2,17}
#define FLEX_IO_NVIC (NVIC_VECTOR){69,2,17}

#define SAI0_TRANSMIT_NVIC (NVIC_VECTOR){70,2,17}
#define SAI0_RECEIVE_NVIC (NVIC_VECTOR){71,2,17}

#define ENET_1588_TIMER_INTERRUPT_NVIC (NVIC_VECTOR){72,2,18}
#define ENET_PERIOD_EVENT_TIMER_OVERFLOW_NVIC (NVIC_VECTOR){72,2,18}
#define ENET_TIME_STAMP_AVAILABLE_NVIC (NVIC_VECTOR){72,2,18}
#define ENET_DATA_TRANSFER_DONE_NVIC (NVIC_VECTOR){73,2,18}
#define ENET_TRANSMIT_BUFFER_DONE_RING_0_NVIC (NVIC_VECTOR){73,2,18}
#define ENET_TRANSMIT_FRAME_DONE_RING_0_NVIC (NVIC_VECTOR){73,2,18}
#define ENET_RECEIVE_BUFFER_DONE_RING_0_NVIC (NVIC_VECTOR){74,2,18}
#define ENET_RECEIVE_FRAME_DONE_RING_0_NVIC (NVIC_VECTOR){74,2,18}
#define ENET_PAYLOAD_RECEIVE_ERROR_NVIC (NVIC_VECTOR){75,2,18}
#define ENET_COLLISON_RETRY_LIMIT_REACHED_NVIC (NVIC_VECTOR){75,2,18}
#define ENET_LATE_COLLISON_DETECTED_NVIC (NVIC_VECTOR){75,2,18}
#define ENET_AXI_BUS_ERROR_DETECTED_NVIC (NVIC_VECTOR){75,2,18}
#define ENET_BABBLING_TRANSMIT_ERROR_NVIC (NVIC_VECTOR){75,2,18}
#define ENET_BABBLING_RECIEVE_ERROR_NVIC (NVIC_VECTOR){75,2,18}
#define ENET_TRANSMIT_FIFO_UNDERRUN_NVIC (NVIC_VECTOR){75,2,18}
#define ENET_GRACEFUL_STOP_NVIC (NVIC_VECTOR){76,2,19}
#define ENET_WAKE_FROM_SLEEP_NVIC (NVIC_VECTOR){77,2,19}

#define FLEX_CAN_0_ORED_NVIC (NVIC_VECTOR){78,2,19}
#define FLEX_CAN_0_TRANSMIT_ERROR_COUTER_TRANSTION_NVIC (NVIC_VECTOR){78,2,19}
#define FLEX_CAN_0_RECEIVE_ERROR_COUTER_TRANSTION_NVIC (NVIC_VECTOR){78,2,19}
#define FLEX_CAN_0_BUS_ERROR_DETECTED_NVIC (NVIC_VECTOR){79,2,19}
#define FLEX_CAN_0_MESSAGE_MATCH_SELECTED_FLITER_CRITERIA_LOWPOWER_MODE_NVIC (NVIC_VECTOR){80,2,20}
#define FLEX_CAN_0_MESSAGE_NOT_MATCH_TIME_LOWPOWER_MODE_NVIC (NVIC_VECTOR){80,2,20}
#define FLEX_CAN_0_ORED_MESSAGE_BUFFER_0_15_NVIC (NVIC_VECTOR){81,2,20}
#define FLEX_CAN_0_ORED_MESSAGE_BUFFER_16_31_NVIC (NVIC_VECTOR){82,2,20}
#define FLEX_CAN_0_ORED_MESSAGE_BUFFER_32_47_NVIC (NVIC_VECTOR){83,2,20}
#define FLEX_CAN_0_ORED_MESSAGE_BUFFER_48_63_NVIC (NVIC_VECTOR){84,2,21}


#define FLEX_CAN_1_ORED_NVIC (NVIC_VECTOR){85,2,21}
#define FLEX_CAN_1_TRANSMIT_ERROR_COUTER_TRANSTION_NVIC (NVIC_VECTOR){85,2,21}
#define FLEX_CAN_1_RECEIVE_ERROR_COUTER_TRANSTION_NVIC (NVIC_VECTOR){85,2,21}
#define FLEX_CAN_1_BUS_ERROR_DETECTED_NVIC (NVIC_VECTOR){86,2,21}
#define FLEX_CAN_1_ORED_MESSAGE_BUFFER_0_15_NVIC (NVIC_VECTOR){88,2,22}
#define FLEX_CAN_1_ORED_MESSAGE_BUFFER_16_31_NVIC (NVIC_VECTOR){89,2,22}
#define FLEX_CAN_1_ORED_MESSAGE_BUFFER_32_47_NVIC (NVIC_VECTOR){90,2,22}
#define FLEX_CAN_1_ORED_MESSAGE_BUFFER_48_63_NVIC (NVIC_VECTOR){91,2,22}

#define FLEX_CAN_2_ORED_NVIC (NVIC_VECTOR){92,2,23}
#define FLEX_CAN_2_TRANSMIT_ERROR_COUTER_TRANSTION_NVIC (NVIC_VECTOR){92,2,23}
#define FLEX_CAN_2_RECEIVE_ERROR_COUTER_TRANSTION_NVIC (NVIC_VECTOR){92,2,23}
#define FLEX_CAN_2_BUS_ERROR_DETECTED_NVIC (NVIC_VECTOR){92,2,23}
#define FLEX_CAN_2_ORED_MESSAGE_BUFFER_0_15_NVIC (NVIC_VECTOR){95,2,23}
#define FLEX_CAN_2_ORED_MESSAGE_BUFFER_16_31_NVIC (NVIC_VECTOR){96,2,24}

#define FTM0_CHANNEL_0_CHANNEL_1_NVIC (NVIC_VECTOR){99,3,24}
#define FTM0_CHANNEL_2_CHANNEL_3_NVIC (NVIC_VECTOR){100,3,25}
#define FTM0_CHANNEL_4_CHANNEL_5_NVIC (NVIC_VECTOR){101,3,25}
#define FTM0_CHANNEL_6_CHANNEL_7_NVIC (NVIC_VECTOR){102,3,25}
#define FTM0_FAULT_NVIC (NVIC_VECTOR){103,3,25}
#define FTM0_COUNTER_OVERFLOW_NVIC (NVIC_VECTOR){104,3,26}

#define FTM1_CHANNEL_0_CHANNEL_1_NVIC (NVIC_VECTOR){105,3,26}
#define FTM1_CHANNEL_2_CHANNEL_3_NVIC (NVIC_VECTOR){106,3,26}
#define FTM1_CHANNEL_4_CHANNEL_5_NVIC (NVIC_VECTOR){107,3,26}
#define FTM1_CHANNEL_6_CHANNEL_7_NVIC (NVIC_VECTOR){108,3,27}
#define FTM1_FAULT_NVIC (NVIC_VECTOR){109,3,27}
#define FTM1_COUNTER_OVERFLOW_NVIC (NVIC_VECTOR){110,3,27}

#define FTM2_CHANNEL_0_CHANNEL_1_NVIC (NVIC_VECTOR){111,3,27}
#define FTM2_CHANNEL_2_CHANNEL_3_NVIC (NVIC_VECTOR){112,3,28}
#define FTM2_CHANNEL_4_CHANNEL_5_NVIC (NVIC_VECTOR){113,3,28}
#define FTM2_CHANNEL_6_CHANNEL_7_NVIC (NVIC_VECTOR){114,3,28}
#define FTM2_FAULT_NVIC (NVIC_VECTOR){115,3,28}
#define FTM2_COUNTER_OVERFLOW_NVIC (NVIC_VECTOR){116,3,29}

#define FTM3_CHANNEL_0_CHANNEL_1_NVIC (NVIC_VECTOR){117,3,29}
#define FTM3_CHANNEL_2_CHANNEL_3_NVIC (NVIC_VECTOR){118,3,28}
#define FTM3_CHANNEL_4_CHANNEL_5_NVIC (NVIC_VECTOR){119,3,28}
#define FTM3_CHANNEL_6_CHANNEL_7_NVIC (NVIC_VECTOR){120,3,30}
#define FTM3_FAULT_NVIC (NVIC_VECTOR){121,3,30}
#define FTM3_COUNTER_OVERFLOW_NVIC (NVIC_VECTOR){122,3,30}

#define FTM4_CHANNEL_0_CHANNEL_1_NVIC (NVIC_VECTOR){123,3,30}
#define FTM4_CHANNEL_2_CHANNEL_3_NVIC (NVIC_VECTOR){124,3,31}
#define FTM4_CHANNEL_4_CHANNEL_5_NVIC (NVIC_VECTOR){125,3,31}
#define FTM4_CHANNEL_6_CHANNEL_7_NVIC (NVIC_VECTOR){126,3,31}
#define FTM4_FAULT_NVIC (NVIC_VECTOR){127,3,31}
#define FTM4_COUNTER_OVERFLOW_NVIC (NVIC_VECTOR){128,4,32}

#define FTM5_CHANNEL_0_CHANNEL_1_NVIC (NVIC_VECTOR){129,4,32}
#define FTM5_CHANNEL_2_CHANNEL_3_NVIC (NVIC_VECTOR){130,4,32}
#define FTM5_CHANNEL_4_CHANNEL_5_NVIC (NVIC_VECTOR){131,4,32}
#define FTM5_CHANNEL_6_CHANNEL_7_NVIC (NVIC_VECTOR){132,4,33}
#define FTM5_FAULT_NVIC (NVIC_VECTOR){133,4,33}
#define FTM5_COUNTER_OVERFLOW_NVIC (NVIC_VECTOR){134,4,33}

#define FTM6_CHANNEL_0_CHANNEL_1_NVIC (NVIC_VECTOR){135,4,33}
#define FTM6_CHANNEL_2_CHANNEL_3_NVIC (NVIC_VECTOR){136,4,34}
#define FTM6_CHANNEL_4_CHANNEL_5_NVIC (NVIC_VECTOR){137,4,34}
#define FTM6_CHANNEL_6_CHANNEL_7_NVIC (NVIC_VECTOR){138,4,34}
#define FTM6_FAULT_NVIC (NVIC_VECTOR){139,4,34}
#define FTM6_COUNTER_OVERFLOW_NVIC (NVIC_VECTOR){140,4,35}

#define FTM7_CHANNEL_0_CHANNEL_1_NVIC (NVIC_VECTOR){141,4,35}
#define FTM7_CHANNEL_2_CHANNEL_3_NVIC (NVIC_VECTOR){142,4,35}
#define FTM7_CHANNEL_4_CHANNEL_5_NVIC (NVIC_VECTOR){143,4,35}
#define FTM7_CHANNEL_6_CHANNEL_7_NVIC (NVIC_VECTOR){144,4,36}
#define FTM7_FAULT_NVIC (NVIC_VECTOR){145,4,36}
#define FTM7_COUNTER_OVERFLOW_NVIC (NVIC_VECTOR){146,4,36}

#define FTFM_EEERAM_ECC_ERR_NVIC (NVIC_VECTOR){152,4,38}
#define MIGRATE_ECC_ERR_NVIC (NVIC_VECTOR){153,4,38}


void sys_tick_init(uint8_t interrupt_option);
void Sys_tick_dis();
void sys_tick_load_value(volatile uint32_t value);
void DELAY_SYSTEM_TICK_NO_INTERRUPT(volatile uint32_t time);

void nvic_init(NVIC_VECTOR vector,uint8_t priority);
void NVIC_DISABLE(NVIC_VECTOR vector);
void PTA_INTERRUPT(void (*interrupt)());
void PTB_INTERRUPT(void (*interrupt)());
void PTC_INTERRUPT(void (*interrupt)());
void PTD_INTERRUPT(void (*interrupt)());
void PTE_INTERRUPT(void (*interrupt)());

void PTA_PORT_INTERRUPT(void (*interrupt)(),int port);
void PTB_PORT_INTERRUPT(void (*interrupt)(),int port);
void PTC_PORT_INTERRUPT(void (*interrupt)(),int port);
void PTD_PORT_INTERRUPT(void (*interrupt)(),int port);
void PTE_PORT_INTERRUPT(void (*interrupt)(),int port);

void LPIT_CHANNEL_0_INTERRUPT(void (*interrupt)());
void LPIT_CHANNEL_1_INTERRUPT(void (*interrupt)());
void LPIT_CHANNEL_2_INTERRUPT(void (*interrupt)());
void LPIT_CHANNEL_3_INTERRUPT(void (*interrupt)());


#ifdef __cplusplus
}
#endif
#endif